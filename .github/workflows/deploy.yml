# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: GM Service CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: 1. Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 2. Grant Execute Permission For Gradlew & Build gradle
      run: |
        chmod +x gradlew
        ./gradlew build -x test

    - name: 3. Docker hub login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_ID }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 4. Docker image build
      run: |
        docker build -t ${{ secrets.DOCKER_ID }}/gm

    - name: 5. Docker Hub push
      run: docker push ${{ secrets.DOCKER_ID }}/gm
        
    - name: 6. Deploy to Instance
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: $ {{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: $ {{ secrets.PRIVATE_KEY }}
        script: |
          sudo docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker pull ${{ secrets.DOCKER_ID }}/gm
          sudo docker rm -f $(docker ps -qa) 2>/dev/null || true
          sudo docker-compose up -d
          sudo docker image prune -f
      env:
        BUCKET: ${{ secrets.BUCKET }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_URL: ${{ secrets.DB_URL }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        STORAGE_CREDENTIALS: ${{ secrets.STORAGE_CREDENTIALS }}
